{"ast":null,"code":"var _jsxFileName = \"/home/suraj/Suraj Codes/algovis/Sudoku-Solver/src/components/Board.jsx\";\nimport React from \"react\";\nimport Square from \"./Square\";\n\nfunction Board({\n  startGrid,\n  grid,\n  onChange,\n  disabled,\n  popover\n}) {\n  const renderSquares = () => {\n    const squares = [];\n\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 9; j++) {\n        const index = `${i},${j}`;\n        squares.push( /*#__PURE__*/React.createElement(Square, {\n          style: startGrid[i][j] === 0 ? {\n            color: \"red\"\n          } : {\n            color: \"black\"\n          },\n          key: index,\n          id: index,\n          onChange: onChange,\n          value: grid[i][j] === 0 ? \"\" : grid[i][j],\n          disabled: disabled,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 11\n          }\n        }));\n      }\n    }\n\n    return squares;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sudoku-grid shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }\n  }, renderSquares());\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/suraj/Suraj Codes/algovis/Sudoku-Solver/src/components/Board.jsx"],"names":["React","Square","Board","startGrid","grid","onChange","disabled","popover","renderSquares","squares","i","j","index","push","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,IAAb;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA,QAA7B;AAAuCC,EAAAA;AAAvC,CAAf,EAAiE;AAC/D,QAAMC,aAAa,GAAG,MAAM;AAC1B,UAAMC,OAAO,GAAG,EAAhB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,cAAMC,KAAK,GAAI,GAAEF,CAAE,IAAGC,CAAE,EAAxB;AACAF,QAAAA,OAAO,CAACI,IAAR,eACE,oBAAC,MAAD;AACE,UAAA,KAAK,EACHV,SAAS,CAACO,CAAD,CAAT,CAAaC,CAAb,MAAoB,CAApB,GAAwB;AAAEG,YAAAA,KAAK,EAAE;AAAT,WAAxB,GAA2C;AAAEA,YAAAA,KAAK,EAAE;AAAT,WAF/C;AAIE,UAAA,GAAG,EAAEF,KAJP;AAKE,UAAA,EAAE,EAAEA,KALN;AAME,UAAA,QAAQ,EAAEP,QANZ;AAOE,UAAA,KAAK,EAAED,IAAI,CAACM,CAAD,CAAJ,CAAQC,CAAR,MAAe,CAAf,GAAmB,EAAnB,GAAwBP,IAAI,CAACM,CAAD,CAAJ,CAAQC,CAAR,CAPjC;AAQE,UAAA,QAAQ,EAAEL,QARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;AACF;;AAED,WAAOG,OAAP;AACD,GAtBD;;AAwBA,sBAAO;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCD,aAAa,EAAlD,CAAP;AACD;;AAED,eAAeN,KAAf","sourcesContent":["import React from \"react\";\nimport Square from \"./Square\";\n\nfunction Board({ startGrid, grid, onChange, disabled, popover }) {\n  const renderSquares = () => {\n    const squares = [];\n\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 9; j++) {\n        const index = `${i},${j}`;\n        squares.push(\n          <Square\n            style={\n              startGrid[i][j] === 0 ? { color: \"red\" } : { color: \"black\" }\n            }\n            key={index}\n            id={index}\n            onChange={onChange}\n            value={grid[i][j] === 0 ? \"\" : grid[i][j]}\n            disabled={disabled}\n          />\n        );\n      }\n    }\n\n    return squares;\n  };\n\n  return <div className=\"sudoku-grid shadow\">{renderSquares()}</div>;\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}